<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-06T08:12:06 IST" name="Loan Department" finished-at="2025-02-06T08:12:06 IST" duration-ms="358">
    <groups>
      <group name="smoke">
        <method signature="Day1.demo()[pri:0, instance:testng.test.Day1@5149d738]" name="demo" class="testng.test.Day1"/>
        <method signature="Day2.ploan()[pri:0, instance:testng.test.Day2@742ff096]" name="ploan" class="testng.test.Day2"/>
        <method signature="Day4.webLoginCarLoan()[pri:0, instance:testng.test.Day4@1c5920df]" name="webLoginCarLoan" class="testng.test.Day4"/>
        <method signature="Day3.webLoginCarLoan()[pri:0, instance:testng.test.Day3@536f2a7e]" name="webLoginCarLoan" class="testng.test.Day3"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-02-06T08:12:06 IST" name="Personal Loan" finished-at="2025-02-06T08:12:06 IST" duration-ms="200">
      <class name="testng.test.Day4">
        <test-method signature="webLoginCarLoan()[pri:0, instance:testng.test.Day4@1c5920df]" started-at="2025-02-06T08:12:06 IST" name="webLoginCarLoan" finished-at="2025-02-06T08:12:06 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
      </class> <!-- testng.test.Day4 -->
      <class name="testng.test.Day2">
        <test-method is-config="true" signature="prerequisites()[pri:0, instance:testng.test.Day2@742ff096]" started-at="2025-02-06T08:12:06 IST" name="prerequisites" finished-at="2025-02-06T08:12:06 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisites -->
        <test-method signature="ploan()[pri:0, instance:testng.test.Day2@742ff096]" started-at="2025-02-06T08:12:06 IST" name="ploan" finished-at="2025-02-06T08:12:06 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
        <test-method is-config="true" signature="postrequisites()[pri:0, instance:testng.test.Day2@742ff096]" started-at="2025-02-06T08:12:06 IST" name="postrequisites" finished-at="2025-02-06T08:12:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postrequisites -->
      </class> <!-- testng.test.Day2 -->
      <class name="testng.test.Day1">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testng.test.Day1@5149d738]" started-at="2025-02-06T08:12:06 IST" name="beforeClass" finished-at="2025-02-06T08:12:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.test.Day1@5149d738]" started-at="2025-02-06T08:12:06 IST" name="beforeMethod" finished-at="2025-02-06T08:12:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="demo()[pri:0, instance:testng.test.Day1@5149d738]" started-at="2025-02-06T08:12:06 IST" name="demo" finished-at="2025-02-06T08:12:06 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.test.Day1@5149d738]" started-at="2025-02-06T08:12:06 IST" name="afterMethod" finished-at="2025-02-06T08:12:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.test.Day1@5149d738]" started-at="2025-02-06T08:12:06 IST" name="beforeMethod" finished-at="2025-02-06T08:12:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="demo1(java.lang.String)[pri:0, instance:testng.test.Day1@5149d738]" started-at="2025-02-06T08:12:06 IST" name="demo1" finished-at="2025-02-06T08:12:06 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.test.Day1@5149d738]" started-at="2025-02-06T08:12:06 IST" name="afterMethod" finished-at="2025-02-06T08:12:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testng.test.Day1@5149d738]" started-at="2025-02-06T08:12:06 IST" name="beforeMethod" finished-at="2025-02-06T08:12:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="demo2()[pri:0, instance:testng.test.Day1@5149d738]" started-at="2025-02-06T08:12:06 IST" name="demo2" finished-at="2025-02-06T08:12:06 IST" duration-ms="19" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at testng.test.Day1.demo2(Day1.java:49)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testng.test.Day1@5149d738]" started-at="2025-02-06T08:12:06 IST" name="afterMethod" finished-at="2025-02-06T08:12:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testng.test.Day1 -->
    </test> <!-- Personal Loan -->
    <test started-at="2025-02-06T08:12:06 IST" name="Car Loan" finished-at="2025-02-06T08:12:06 IST" duration-ms="22">
      <class name="testng.test.Day3">
        <test-method signature="carLoan(java.lang.String,java.lang.String)[pri:0, instance:testng.test.Day3@536f2a7e]" started-at="2025-02-06T08:12:06 IST" name="carLoan" finished-at="2025-02-06T08:12:06 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carLoan -->
        <test-method signature="webLoginCarLoan()[pri:0, instance:testng.test.Day3@536f2a7e]" started-at="2025-02-06T08:12:06 IST" name="webLoginCarLoan" finished-at="2025-02-06T08:12:06 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
      </class> <!-- testng.test.Day3 -->
      <class name="testng.test.Day2">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:testng.test.Day2@742ff096]" started-at="2025-02-06T08:12:06 IST" name="beforeSuite" finished-at="2025-02-06T08:12:06 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:testng.test.Day2@742ff096]" started-at="2025-02-06T08:12:06 IST" name="afterSuite" finished-at="2025-02-06T08:12:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testng.test.Day2 -->
    </test> <!-- Car Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
